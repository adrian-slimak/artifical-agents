__LEARNING_PARAMETERS__
from configs.environment_parameters import environment_parameters as environment_parameters
from configs.engine_configuration import engine_config as engine_configuration
from other.hotkey_listener import HotKeyListener
from networks.lstm import LSTMModel
from networks.rnn import RNNModel
from networks.dense import MLPModel
from other.utils import save_parameters, current_save_ID


save_ID = current_save_ID()
hotkey_listener = HotKeyListener()
hotkey_listener.add('<ctrl>+<alt>+a', lambda: save_parameters(save_ID))


# ENVIRONMENT PARAMETERS
unity_environment_path = "C:/Users/adek1/Desktop/Env/ArtificalAnimals.exe"
# unity_environment_path = None

brains = [brain_name for brain_name in environment_parameters if ('count' in environment_parameters[brain_name] and environment_parameters[brain_name]['count'] > 0)]

show_plots = True

# GENERAL
NetworkModel = LSTMModel

units = 8
use_bias = True

number_of_generations = 250
number_of_steps = 1500


# MULTI
number_of_environments = 4

# GENETIC ALGORITHM PARAMETERS
# Random Init
init_min_genes = 0.5
init_max_genes = 0.75
init_loc = 0.
init_scale = 1.

# Selection
# selection_method = 'Roulette Wheel'
selection_method = 'Fittest Half'

# Mating
mating_method = 'Two Points Per Part'
# mating_method = 'Two Points'
max_percent_length = 0.7

# Pairing
pairing_method = 'Fittest'

# Mutation
gen_mutation_chance = 0.04
gen_remove_chance = 0.015
gen_appear_chance = 0.03
gen_mutation_scale = 0.4

__ENVIRONMENT_PARAMETERS__
                "max_turn_speed": 100,

                "rest_after_eat": 0,

                "actions_vector_size": 2,
                "fitness_vector_size": 1,
                "stats_vector_size": 5,

                "observations":
                    {
                        "vision":
                            {
                                "vector_size": 15 * 3,  # 3 x "vision_cell_number", one per plant, prey, predator
                                "cell_number": 15,
                                "angle": 240,
                                "range": 20
                            },

                        # "hearing":
                        #     {
                        #         "vector_size": 12,
                        #         "cell_number": 12,
                        #         "angle": 360,
                        #         "range": 40
                        #     },
                    },

                "energy":
                {
                    "": 100,
                    "gain_per_eat": 30,
                    "drain_per_step": 0.15,
                    "drain_per_speed": 0.1,
                },
            },

        "predator":
            {
                "count": 8,

                "communication":  # If enabled, 'actions_vector_size' will automatically increase by one
                    {
                        "enabled": 0,  # 0 - False, 1 - True
                        "sound_value": 3.5,
                    },

                "max_move_speed": 8,
                "max_turn_speed": 150,

                "rest_after_eat": 4,

                "actions_vector_size": 2,
                "fitness_vector_size": 1,
                "stats_vector_size": 5,

                "confusion_effect":
                    {
                        "value": 1,  # enabled if > 0
                        "distance": 3,
                    },

                "observations":
                    {
                        "vision":
                            {
                                "vector_size": 12 * 3,
                                "cell_number": 12,
                                "angle": 180,
                                "range": 25
                            },

                        # "hearing":
                        #     {
                        #         "vector_size": 12,
                        #         "cell_number": 12,
                        #         "angle": 360,
                        #         "range": 40
                        #     },
                    },

                "energy":
                {
                    "": 100,
                    "gain_per_eat": 50,
                    "drain_per_step": 0.1,
                    "drain_per_speed": 0.05,
                },
            },

        "environment":
            {
                "food":
                    {
                        "spawn_method": 1,   # 0 - Grid  1 - Random
                        "spawn_per_step": 0.3,
                        "spawn_amount_reset": 400,  # for Random Spawn
                        "spawn_grid_step": 4,  # for Grid Spawn
                    }
            }
    }
